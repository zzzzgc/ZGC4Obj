<?xml version="1.1" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd"
	> <!-- 该属性延迟初始化 -->

	<description>Spring公共配置 </description>
	<!-- 读取配置文件 -->
	<context:property-placeholder ignore-unresolvable="true" location="WEB-INF/config/properties/setting_t.properties" />
		<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>WEB-INF/config/properties/setting_t</value>
				<value>WEB-INF/config/properties/yangcong</value>
				<value>WEB-INF/config/properties/sendMail</value>
				<value>WEB-INF/config/properties/tmallWebCatchProcessor</value>
				<value>WEB-INF/config/properties/filter</value>
			</list>
		</property>
		<property name="cacheSeconds" value="36000" />
	</bean>

	<bean id="constants" class="xinxing.boss.admin.common.utils.constants.Constants"  lazy-init="false">
		<property name="messageSource" ref="messageSource" />
	</bean>	

	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="xinxing.boss.admin">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>

	<!-- 定义Hibernate Session工厂 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"> 
		<property name="dataSource" ref="dataSource"/>
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
     			<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
     			<prop key="net.sf.ehcache.configurationResourceName">${hibernate.ehcache.configFile}</prop>
			
			</props>
		</property>
		<property name="packagesToScan" value="xinxing.boss.admin" /><!-- 如果多个，用“,”分隔 -->
	</bean>

	<!-- 定义事务 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">  
        <property name="sessionFactory" ref="sessionFactory" />  
    </bean>
    
	<!-- 配置 Annotation 驱动，扫描@Transactional注解的类定义事务  -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
	
	<!-- 配置 JSR303 Bean Validator 定义 -->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />

	<!-- 数据源配置, 使用druid连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="filters" value="mergeStat" />
		<!-- 密码解密 -->
		<!-- <property name="filters" value="config" />
		<property name="connectionProperties" value="config.decrypt=true" /> -->
		<!-- 申请连接的时候检测 -->
		<property name="testWhileIdle" value="true"></property> 
		<!-- 检测连接 -->
		<property name="validationQuery" value="select 'x'"></property>
		<!--maxActive: 最大连接数量 -->
		<property name="maxActive" value="${jdbc.pool.maxActive}" />
		<!--initialSize: 初始化连接 -->
		<property name="initialSize" value="${jdbc.pool.maxIdle}" />
	</bean>
	
	
	<!--AOP日志配置S -->
	<context:component-scan base-package="xinxing.boss.admin.common.utils.aop.log"/>
		
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	
	<bean class="xinxing.boss.admin.common.utils.aop.log.AopAspect"/>
	<!-- shiro 权限AOP配置E-->


</beans>