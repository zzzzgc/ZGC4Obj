package com.xinxing.o.boss.business.provider.other.testsdlt1.util;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.apache.commons.httpclient.util.DateUtil;

import com.xinxing.boss.business.api.domain.SendOrderInfo;
import com.xinxing.o.boss.common.encry.MD5_HexUtil;
import com.xinxing.o.boss.common.http.HttpUtils;
import com.xinxing.o.boss.common.resource.Constants;

public class Testsdlt1Util {

	/**
	 * 获取提单请求参数
	 * @param orderInfo
	 * @return
	 * @author Administrator
	 * 参数格式userid=xxx&pwd=xxx&orderid=xxx&userkey=xxx
	 */
	public static String getSendParam(SendOrderInfo orderInfo){
		String orderid = orderInfo.getOrderId();
		//充值手机号
		String account = orderInfo.getPhone();
		//第一个数代表全国0/本省 1,第二个数代表产品M
		String productCode = orderInfo.getSupplierCode();
		String[] arrProductCode = productCode.split(",");
		String area = arrProductCode[0];
		String gprs = arrProductCode[1];
		String userid = Constants.getString("testsdlt1_userid").trim();
		//由山东联通商务提供。（需大写）
		String pwd = Constants.getString("testsdlt1_pwd").trim().toUpperCase();
		String key = Constants.getString("testsdlt1_key").trim();
		//0 即时生效，1次日生效，2 次月生效
		String  effecttime= "0";
		//传入月数，0为当月有效
		String  validity  = "0";
		String times = DateUtil.formatDate(new Date(), "yyyyMMddhhmmss");
		//（userid+“用户编号”+ pwd+“由山东联通商务提供”+ orderid+“用户提交的订单号”+ account+“手机号码”+gprs+”流量值”
		// +area+”流量范围”+effecttime+”生效日期”+validity+”流量有效期”+times+”时间戳”+”加密密钥”）MD5加密
		String userkey = MD5_HexUtil.md5Hex("userid" + userid + "pwd" + pwd + "orderid" + orderid + "account" + account 
				+ "gprs" + gprs + "area" + area + "effecttime" + effecttime + "validity" + validity + "times" + times + key);
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("userid", userid);
		map.put("pwd", pwd);
		map.put("orderid", orderid);
		map.put("account", account);
		map.put("gprs", gprs);
		map.put("area", area);
		map.put("effecttime", effecttime);
		map.put("validity", validity);
		map.put("times", times);
		map.put("userkey", userkey);
		return HttpUtils.getStrByMapOrderByABC(map);
	}
	/** 
	 * 获取查询请求参数
	 * @param orderInfo
	 * @return
	 * @author Administrator
	 */
	public static String getQueryParam(SendOrderInfo orderInfo){
		String orderid = orderInfo.getOrderId();
		String userid = Constants.getString("testsdlt1_userid").trim();
		String pwd = Constants.getString("testsdlt1_pwd").trim().toUpperCase();
		String key = Constants.getString("testsdlt1_key").trim();
		String userkey = MD5_HexUtil.md5Hex("userid" + userid + "pwd" + pwd + "orderid" + orderid + key);
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("userid", userid);
		map.put("pwd", pwd);
		map.put("orderid", orderid);
		map.put("userkey", userkey);
		return HttpUtils.getStrByMapOrderByABC(map);
	}
	/**
	 * 获取错误信息
	 * @param error
	 */
	public static String getErrMsg(String error){
		Map<String, String> map = new HashMap<String, String>();
		map.put("0", "无错误	请求已被后台接收");
		map.put("1003", "用户ID或接口密码错误	充值时可失败，查询时需人工处理");
		map.put("1004", "用户IP错误	充值时可失败，查询时需人工处理");
		map.put("1005", "用户接口已关闭	充值时可失败，查询时需人工处理");
		map.put("1006", "加密结果错误	充值时可失败，查询时需人工处理");
		map.put("1007", "订单号不存在	需在该订单提交10分钟后方可处理失败");
		map.put("1011", "号码归属地未知	充值时可失败，查询时需人工处理");
		map.put("1013", "手机对应的商品有误或者没有上架	充值时可失败，查询时需人工处理");
		map.put("1014", "无法找到手机归属地	充值时可失败，查询时需人工处理");
		map.put("1015", "余额不足	充值时可失败，查询时需人工处理");
		map.put("1017", "产品未分配用户，联系商务	充值时可失败");
		map.put("1018", "订单生成失败	充值时可失败");
		map.put("1019", "充值号码与产品不匹配	充值时可失败");
		map.put("1020", "号码运营商未知	充值时可失败");
		map.put("9998", "参数有误	充值时可失败");
		map.put("9999", "系统错误	人工处理");
		return map.get(error).isEmpty() ? "" : map.get(error);
	}
}
